import React, { useEffect, useState } from "react";
import { Typography, Button, Grid, TableHead, TableCell, TableRow, Table, Paper, TableContainer, TableBody, Box } from "@mui/material";
import html2canvas from 'html2canvas';
import dayjs from "dayjs";

const PrintInvoice = () => {
  const [invoiceData, setInvoiceData] = useState(null);

  useEffect(() => {
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å sessionStorage
    const storedData = sessionStorage.getItem("invoiceData");

    if (storedData) {
      try {
        setInvoiceData(JSON.parse(storedData));
      } catch (error) {
        console.error("Error parsing invoiceData:", error);
      }
    }
  }, []);

  const address = invoiceData?.Order[0].Address || ''; // ‡∏î‡∏∂‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏≤‡∏Å invoiceData

  let formattedAddress = "-"; // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô "-"

  if (address !== "-") {
    // ‡πÅ‡∏¢‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÜ ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ split(" ")
    const addressParts = address.split(" ");

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏û‡∏≠‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô error)
    if (addressParts.length >= 6) {
      formattedAddress = `‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà${addressParts[0]} ‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà${addressParts[1]} ‡∏ï‡∏≥‡∏ö‡∏•${addressParts[2]} ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠${addressParts[3]} ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î${addressParts[4]} ‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå${addressParts[5]}`;
    }
  }

  const numberToThaiText = (num) => {
    const thaiNumbers = ["‡∏®‡∏π‡∏ô‡∏¢‡πå", "‡∏´‡∏ô‡∏∂‡πà‡∏á", "‡∏™‡∏≠‡∏á", "‡∏™‡∏≤‡∏°", "‡∏™‡∏µ‡πà", "‡∏´‡πâ‡∏≤", "‡∏´‡∏Å", "‡πÄ‡∏à‡πá‡∏î", "‡πÅ‡∏õ‡∏î", "‡πÄ‡∏Å‡πâ‡∏≤"];
    const thaiPlaces = ["", "‡∏™‡∏¥‡∏ö", "‡∏£‡πâ‡∏≠‡∏¢", "‡∏û‡∏±‡∏ô", "‡∏´‡∏°‡∏∑‡πà‡∏ô", "‡πÅ‡∏™‡∏ô", "‡∏•‡πâ‡∏≤‡∏ô"];

    let text = "";
    let numberStr = parseFloat(num).toFixed(2).toString(); // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô string ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
    let [integerPart, decimalPart] = numberStr.split("."); // ‡πÅ‡∏¢‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡∏∞‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°

    // üü¢ ‡πÅ‡∏õ‡∏•‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°
    let intLen = integerPart.length;
    for (let i = 0; i < intLen; i++) {
      let digit = parseInt(integerPart[i]);
      let place = intLen - i - 1;

      if (digit !== 0) {
        if (place === 1 && digit === 1) {
          text += "‡∏™‡∏¥‡∏ö"; // "‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏™‡∏¥‡∏ö" ‚Üí "‡∏™‡∏¥‡∏ö"
        } else if (place === 1 && digit === 2) {
          text += "‡∏¢‡∏µ‡πà‡∏™‡∏¥‡∏ö"; // "‡∏™‡∏≠‡∏á‡∏™‡∏¥‡∏ö" ‚Üí "‡∏¢‡∏µ‡πà‡∏™‡∏¥‡∏ö"
        } else if (place === 0 && digit === 1 && intLen > 1) {
          text += "‡πÄ‡∏≠‡πá‡∏î"; // "‡∏´‡∏ô‡∏∂‡πà‡∏á" ‚Üí "‡πÄ‡∏≠‡πá‡∏î" ‡πÉ‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢
        } else {
          text += thaiNumbers[digit] + thaiPlaces[place];
        }
      }
    }

    text += "‡∏ö‡∏≤‡∏ó"; // ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏ó‡∏¢

    // üü¢ ‡πÅ‡∏õ‡∏•‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° (‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå)
    if (decimalPart && decimalPart !== "00") {
      text += " " + thaiNumbers[parseInt(decimalPart[0])] + "‡∏™‡∏¥‡∏ö";
      if (decimalPart[1] !== "0") {
        text += thaiNumbers[parseInt(decimalPart[1])];
      }
      text += "‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå";
    } else {
      text += "‡∏ñ‡πâ‡∏ß‡∏ô";
    }

    return text;
  };

  const formatThaiDate = (dateString) => {
    if (!dateString) return "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"; // ‡∏ñ‡πâ‡∏≤ undefined ‡∏´‡∏£‡∏∑‡∏≠ null ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

    const [day, month, year] = dateString.split("/").map(Number);
    const date = new Date(year, month - 1, day); // month - 1 ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ JavaScript ‡∏ô‡∏±‡∏ö‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å 0-11

    const formattedDate = new Intl.DateTimeFormat("th-TH", {
      month: "long",
    }).format(date); // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢

    const buddhistYear = year + 543; // ‡πÅ‡∏õ‡∏•‡∏á‡∏õ‡∏µ ‡∏Ñ.‡∏®. ‡πÄ‡∏õ‡πá‡∏ô ‡∏û.‡∏®.

    return `‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${day} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ${formattedDate} ‡∏û.‡∏®. ${buddhistYear}`;
  };

  const formatAddress = (address) => {
    // ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å address ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ , ‡∏´‡∏£‡∏∑‡∏≠ ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏£‡∏£‡∏Ñ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏ö‡πà‡∏á
    const parts = address.split(/,|\s+/).filter(Boolean);

    if (parts.length < 5) return "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á";

    const [houseNo, moo, subdistrict, district, province, postalCode] = parts;

    return `${houseNo} ‡∏´‡∏°‡∏π‡πà ${moo} ‡∏ï.${subdistrict} ‡∏≠.${district} ‡∏à.${province} ${postalCode}`;
  };

  const formatTaxID = (taxID) => {
    if (!taxID || taxID === "-") {
      return "-";
    }
    return String(taxID).replace(/(\d{3})(\d{4})(\d{5})(\d{1})/, "$1 $2 $3 $4");
  };

  const formatPhoneNumber = (phone) => {
    if (!phone || phone === "-") {
      return "-";
    }
    return String(phone).replace(/(\d{3})(\d{3})(\d{4})/, "$1-$2-$3");
  };

  console.log("invoiceData: ", invoiceData?.Report);
  console.log("Reagistration : ", invoiceData?.Registration);
  console.log("order: ", invoiceData?.Order[0].Address);


  const handleDownloadImage = () => {
    const content = document.querySelector("#invoiceContent"); // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å div ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û

    // ‡πÉ‡∏ä‡πâ html2canvas ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ HTML ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    html2canvas(content).then((canvas) => {
      // ‡πÅ‡∏õ‡∏•‡∏á canvas ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
      const imageUrl = canvas.toDataURL("image/png");

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
      const link = document.createElement('a');
      link.href = imageUrl;
      link.download = 'invoice.png'; // ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
      link.click(); // ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
    });
  };

  return (
    <React.Fragment>
      <Box
        id="invoiceContent"
        sx={{
          width: "21cm",  // ‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πà‡∏ß‡∏¢ cm
          height: "14.8cm",
          backgroundColor: "#f9f9f9", // ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏≠‡πà‡∏≠‡∏ô‡πÜ
          p: 2
        }}
      >
        <Grid container spacing={2}>
          <Grid item xs={8}>
            {
              invoiceData &&
              (
                <React.Fragment>
                  <Typography variant="h6" fontWeight="bold" sx={{ marginBottom: -1 }} gutterBottom>{invoiceData?.Company}</Typography>
                  <Typography variant="subtitle1" sx={{ marginBottom: -1 }} gutterBottom>
                    {formatAddress(invoiceData?.Address)} ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ : {formatPhoneNumber(invoiceData?.Phone)}</Typography>
                  <Typography variant="subtitle1" gutterBottom>‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏†‡∏≤‡∏©‡∏µ‡∏≠‡∏≤‡∏Å‡∏£ : {formatTaxID(invoiceData?.CardID)}</Typography>
                </React.Fragment>
              )
            }
          </Grid>
          <Grid item xs={4} textAlign="right">
            <Typography variant="h6" sx={{ marginRight: 2,fontWeight: "Light" }}>
              ‡πÉ‡∏ö‡∏ß‡∏≤‡∏á‡∏ö‡∏¥‡∏• / ‡πÉ‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏´‡∏ô‡∏µ‡πâ
            </Typography>
          </Grid>
        </Grid>
        {invoiceData && (
          <Grid container spacing={2} marginTop={2} sx={{ px: 2 }}>
            {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó */}
            <Grid item xs={10} sx={{ border: "2px solid black", height: "140px" }}>
              <Typography variant="subtitle2"><b>‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó:</b> {invoiceData?.Order[0].CompanyName}</Typography>
              <Typography variant="subtitle2"><b>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</b> {formattedAddress}</Typography>
              <Typography variant="subtitle2"><b>‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏†‡∏≤‡∏©‡∏µ‡∏≠‡∏≤‡∏Å‡∏£:</b> {invoiceData?.Order[0].CodeID}</Typography>
            </Grid>

            {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ */}
            <Grid item xs={2}>
              <Grid container spacing={2}>
                <Grid item xs={12} sx={{ borderTop: "2px solid black", borderRight: "2px solid black", textAlign: "center", height: "30px" }}>
                  <Typography variant="subtitle2" sx={{ fontWeight: "bold", marginTop: -1.5 }} gutterBottom>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</Typography>
                </Grid>
                <Grid item xs={12} sx={{ borderTop: "2px solid black", borderRight: "2px solid black", textAlign: "center", height: "40px" }}>
                  <Typography variant="subtitle2" sx={{ marginTop: -1 }} gutterBottom>{dayjs(new Date).format("DD/MM/YYYY")}</Typography>
                </Grid>
                <Grid item xs={12} sx={{ borderTop: "2px solid black", borderRight: "2px solid black", textAlign: "center", height: "30px" }}>
                  <Typography variant="subtitle2" sx={{ fontWeight: "bold", marginTop: -1.5 }} gutterBottom>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</Typography>
                </Grid>
                <Grid item xs={12} sx={{ borderTop: "2px solid black", borderRight: "2px solid black", textAlign: "center", borderBottom: "2px solid black", height: "40px" }}>
                  <Typography variant="subtitle2" sx={{ marginTop: -1 }} gutterBottom></Typography>
                </Grid>
              </Grid>
            </Grid>

            {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏ö‡∏ß‡∏≤‡∏á‡∏ö‡∏¥‡∏• */}
            <Table size="small" sx={{ tableLayout: "fixed", "& .MuiTableCell-root": { padding: "1px" }, marginTop: 5, border: "2px solid black" }}>
              <TableHead>
                <TableRow sx={{ borderBottom: "2px solid black", height: "50px" }}>
                  <TableCell sx={{ borderRight: "2px solid black", textAlign: "center", width: "12%" }}>
                    <Typography variant="subtitle2" fontWeight="bold" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</Typography>
                  </TableCell>
                  <TableCell sx={{ borderRight: "2px solid black", textAlign: "center", width: "47%" }}>
                    <Typography variant="subtitle2" fontWeight="bold" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>‡∏ú‡∏π‡πâ‡∏Ç‡∏±‡∏ö/‡∏õ‡πâ‡∏≤‡∏¢‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</Typography>
                  </TableCell>
                  <TableCell sx={{ borderRight: "2px solid black", textAlign: "center", width: "8%" }}>
                    <Typography variant="subtitle2" fontWeight="bold" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>‡∏ä‡∏ô‡∏¥‡∏î‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô</Typography>
                  </TableCell>
                  <TableCell sx={{ borderRight: "2px solid black", textAlign: "center", width: "11%" }}>
                    <Typography variant="subtitle2" fontWeight="bold" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏¥‡∏ï‡∏£</Typography>
                  </TableCell>
                  <TableCell sx={{ borderRight: "2px solid black", textAlign: "center", width: "11%" }}>
                    <Typography variant="subtitle2" fontWeight="bold" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏•‡∏¥‡∏ï‡∏£</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", width: "11%" }}>
                    <Typography variant="subtitle2" fontWeight="bold" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô</Typography>
                  </TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {
                  invoiceData.Report.map((row) => (
                    <TableRow sx={{ borderBottom: "2px solid black", height: "30px" }}>
                      <TableCell sx={{ borderRight: "2px solid black", textAlign: "center", }}>
                        <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{row.Date}</Typography>
                      </TableCell>
                      <TableCell sx={{ borderRight: "2px solid black", textAlign: "center", }}>
                        <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{`${row.Driver} / ${row.Registration}`}</Typography>
                      </TableCell>
                      <TableCell sx={{ borderRight: "2px solid black", textAlign: "center", }}>
                        <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{row.ProductName}</Typography>
                      </TableCell>
                      <TableCell sx={{ borderRight: "2px solid black", textAlign: "center", }}>
                        <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>
                          {new Intl.NumberFormat("en-US").format(row.Volume)}
                        </Typography>
                      </TableCell>
                      <TableCell sx={{ borderRight: "2px solid black", textAlign: "center", }}>
                        <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{new Intl.NumberFormat("en-US").format(row.RateOil)}</Typography>
                      </TableCell>
                      <TableCell sx={{ textAlign: "center", }}>
                        <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{new Intl.NumberFormat("en-US").format(row.Amount)}</Typography>
                      </TableCell>
                    </TableRow>
                  ))
                }
                <TableRow sx={{ borderBottom: "2px solid black", height: "30px" }}>
                  <TableCell colSpan={2} sx={{ textAlign: "left" }}>
                    <Typography variant="subtitle2" fontWeight="bold" gutterBottom>{invoiceData?.DateEnd}</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderRight: "2px solid black" }}>
                    <Typography variant="subtitle2" fontWeight="bold" gutterBottom>‡∏£‡∏ß‡∏°</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderRight: "2px solid black" }}>
                    {new Intl.NumberFormat("en-US").format(invoiceData.Volume)}
                  </TableCell>
                  <TableCell sx={{ textAlign: "center" }} colSpan={2}>
                    {new Intl.NumberFormat("en-US").format(invoiceData.Amount)}
                  </TableCell>
                </TableRow>
                <TableRow sx={{ borderBottom: "2px solid black", height: "30px" }}>
                  <TableCell sx={{ textAlign: "center", borderRight: "2px solid black" }} colSpan={3}>
                    <Typography variant="subtitle2" fontWeight="bold" gutterBottom>{numberToThaiText(invoiceData.Amount)}</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderRight: "2px solid black" }}>
                    <Typography variant="subtitle2" fontWeight="bold" gutterBottom>‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center" }} colSpan={2}>
                    {new Intl.NumberFormat("en-US").format(invoiceData.Amount)}
                  </TableCell>
                </TableRow>
              </TableBody>
            </Table>

            <Grid item xs={12}>
              <Grid container spacing={2} justifyContent="center" alignItems="center">
                <Grid item xs={5}>
                  <Typography variant="subtitle2" gutterBottom>‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ...‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡πÅ‡∏û‡∏ô‡∏î‡πâ‡∏≤ ‡∏™‡∏ï‡∏≤‡∏£‡πå ‡∏≠‡∏≠‡∏¢‡∏•‡πå ‡∏à‡∏≥‡∏Å‡∏±‡∏î ‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢</Typography>
                  <Typography variant="subtitle2" gutterBottom>1. ‡πÄ‡∏ã‡πá‡∏ô‡∏ó‡∏£‡∏±‡∏•...‡πÄ‡∏ü‡∏™‡∏ï‡∏¥‡πÄ‡∏ß‡∏•‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà 663-1-01357-9</Typography>
                  <Typography variant="subtitle2" gutterBottom>2. ‡∏õ‡πà‡∏≤‡πÅ‡∏î‡∏î...‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢ 062-8-16524-6</Typography>
                  <Typography variant="subtitle2" gutterBottom>3. ‡∏û‡∏∞‡πÄ‡∏¢‡∏≤ - ‡πÅ‡∏°‡πà‡∏ï‡πà‡∏≥ 065-1-88088-2</Typography>
                </Grid>
                <Grid item xs={4}>
                  <Typography variant="subtitle2" gutterBottom>‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û ‡πÄ‡∏ã‡πá‡∏ô‡∏ó‡∏£‡∏±‡∏•...‡πÄ‡∏ü‡∏™‡∏ï‡∏¥‡πÄ‡∏ß‡∏•‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà 587-7-23442-6</Typography>
                  <Typography variant="subtitle2" gutterBottom>‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏Ñ‡∏≥...‡∏û‡∏∞‡πÄ‡∏¢‡∏≤ 433-4-06375-9</Typography>
                </Grid>
                <Grid item xs={3} sx={{ textAlign: "center"}}>
                  <Typography variant="subtitle2" gutterBottom>_________________________</Typography>
                  <Typography variant="subtitle2" fontWeight="bold" gutterBottom>‡∏ú‡∏π‡πâ‡∏ß‡∏≤‡∏á‡∏ö‡∏¥‡∏•</Typography>
                </Grid>
              </Grid>
            </Grid>
          </Grid>
        )}
      </Box>
      <div style={{ textAlign: "center", marginTop: "20px" }}>
        <Button variant="contained" onClick={handleDownloadImage}>
          ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        </Button>
      </div>
    </React.Fragment>
  );
};

export default PrintInvoice;

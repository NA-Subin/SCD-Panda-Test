import React, { useEffect, useState } from "react";
import { Typography, Button, Grid, TableHead, TableCell, TableRow, Table, Paper, TableContainer, TableBody, Box } from "@mui/material";
import html2canvas from 'html2canvas';
import html2pdf from "html2pdf.js";
import dayjs from "dayjs";
import jsPDF from "jspdf";
import "jspdf-autotable";
import { formatThaiSlash } from "../../theme/DateTH";

const PrintReport = () => {

  useEffect(() => {
    const data = JSON.parse(sessionStorage.getItem("invoiceData"));

    // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÉ‡∏´‡πâ DOM render ‡∏Å‡πà‡∏≠‡∏ô
    const timer = setTimeout(() => {
      const element = document.querySelector("#invoiceContent");

      const opt = {
        margin: 0, // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ß‡πâ‡∏ô margin ‡∏ô‡∏≠‡∏Å page ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ô element ‡∏°‡∏µ padding ‡πÅ‡∏•‡πâ‡∏ß
        filename: `T-${data.Code}.pdf`,
        image: { type: 'jpeg', quality: 0.98 },
        html2canvas: {
          scale: 2,           // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏°‡∏ä‡∏±‡∏î
          useCORS: true       // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å URL ‡∏ï‡πà‡∏≤‡∏á‡πÇ‡∏î‡πÄ‡∏°‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        },
        jsPDF: {
          unit: 'cm',         // ‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö CSS
          format: 'a4',
          orientation: 'portrait'
        }
      };

      html2pdf().set(opt).from(element).save();
    }, 500);


    return () => clearTimeout(timer);
  }, []);

  const invoiceData = JSON.parse(sessionStorage.getItem("invoiceData"));
  if (!invoiceData) return <div>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>;

  // const formatAddress = (address) => {
  //   // ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å address ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ , ‡∏´‡∏£‡∏∑‡∏≠ ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏£‡∏£‡∏Ñ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏ö‡πà‡∏á
  //   const parts = address.split(/,|\s+/).filter(Boolean);

  //   if (parts.length < 5) return "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á";

  //   const [houseNo, moo, subdistrict, district, province, postalCode] = parts;

  //   return `${houseNo} ‡∏´‡∏°‡∏π‡πà ${moo} ‡∏ï.${subdistrict} ‡∏≠.${district} ‡∏à.${province} ${postalCode}`;
  // };

  const formatAddress = (address) => {
    if (
      !address.no ||
      !address.village ||
      !address.subDistrict ||
      !address.district ||
      !address.province ||
      !address.zipCode
    ) {
      return "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á";
    }

    return `${address.no} ‡∏´‡∏°‡∏π‡πà ${address.village} ‡∏ï.${address.subDistrict} ‡∏≠.${address.district} ‡∏à.${address.province} ${address.zipCode}`;
  };

  const formatTaxID = (taxID) => {
    if (!taxID || taxID === "-") {
      return "-";
    }
    return String(taxID).replace(/(\d{3})(\d{4})(\d{5})(\d{1})/, "$1 $2 $3 $4");
  };

  const formatPhoneNumber = (phone) => {
    if (!phone || phone === "-") {
      return "-";
    }
    return String(phone).replace(/(\d{3})(\d{3})(\d{4})/, "$1-$2-$3");
  };

  const numberToThaiText = (num) => {
    const thaiNumbers = ["‡∏®‡∏π‡∏ô‡∏¢‡πå", "‡∏´‡∏ô‡∏∂‡πà‡∏á", "‡∏™‡∏≠‡∏á", "‡∏™‡∏≤‡∏°", "‡∏™‡∏µ‡πà", "‡∏´‡πâ‡∏≤", "‡∏´‡∏Å", "‡πÄ‡∏à‡πá‡∏î", "‡πÅ‡∏õ‡∏î", "‡πÄ‡∏Å‡πâ‡∏≤"];
    const thaiPlaces = ["", "‡∏™‡∏¥‡∏ö", "‡∏£‡πâ‡∏≠‡∏¢", "‡∏û‡∏±‡∏ô", "‡∏´‡∏°‡∏∑‡πà‡∏ô", "‡πÅ‡∏™‡∏ô", "‡∏•‡πâ‡∏≤‡∏ô"];

    let text = "";
    let numberStr = parseFloat(num).toFixed(2).toString(); // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô string ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
    let [integerPart, decimalPart] = numberStr.split("."); // ‡πÅ‡∏¢‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡∏∞‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°

    // üü¢ ‡πÅ‡∏õ‡∏•‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°
    let intLen = integerPart.length;
    for (let i = 0; i < intLen; i++) {
      let digit = parseInt(integerPart[i]);
      let place = intLen - i - 1;

      if (digit !== 0) {
        if (place === 1 && digit === 1) {
          text += "‡∏™‡∏¥‡∏ö"; // "‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏™‡∏¥‡∏ö" ‚Üí "‡∏™‡∏¥‡∏ö"
        } else if (place === 1 && digit === 2) {
          text += "‡∏¢‡∏µ‡πà‡∏™‡∏¥‡∏ö"; // "‡∏™‡∏≠‡∏á‡∏™‡∏¥‡∏ö" ‚Üí "‡∏¢‡∏µ‡πà‡∏™‡∏¥‡∏ö"
        } else if (place === 0 && digit === 1 && intLen > 1) {
          text += "‡πÄ‡∏≠‡πá‡∏î"; // "‡∏´‡∏ô‡∏∂‡πà‡∏á" ‚Üí "‡πÄ‡∏≠‡πá‡∏î" ‡πÉ‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢
        } else {
          text += thaiNumbers[digit] + thaiPlaces[place];
        }
      }
    }

    text += "‡∏ö‡∏≤‡∏ó"; // ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏ó‡∏¢

    // üü¢ ‡πÅ‡∏õ‡∏•‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° (‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå)
    if (decimalPart && decimalPart !== "00") {
      text += " " + thaiNumbers[parseInt(decimalPart[0])] + "‡∏™‡∏¥‡∏ö";
      if (decimalPart[1] !== "0") {
        text += thaiNumbers[parseInt(decimalPart[1])];
      }
      text += "‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå";
    } else {
      text += "‡∏ñ‡πâ‡∏ß‡∏ô";
    }

    return text;
  };

  const handleDownloadImage = () => {
    const content = document.querySelector("#invoiceContent"); // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å div ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û

    // ‡πÉ‡∏ä‡πâ html2canvas ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ HTML ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    html2canvas(content).then((canvas) => {
      // ‡πÅ‡∏õ‡∏•‡∏á canvas ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
      const imageUrl = canvas.toDataURL("image/png");

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
      const link = document.createElement('a');
      link.href = imageUrl;
      link.download = 'report.png'; // ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
      link.click(); // ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
    });
  };

  const rowSpanMap = invoiceData?.Report.reduce((acc, row) => {
    const key = `${row.Date} : ${row.Driver} : ${row.Registration}`;
    acc[key] = (acc[key] || 0) + 1;
    return acc;
  }, {});

  let mergedCells = {};
  let displayIndex = 0;

  const groupByDate = (data) => {
    const grouped = {};

    data.forEach(item => {
      const date = item.Date;
      const rate = item.Rate;
      if (!grouped[date]) {
        grouped[date] = {
          date,
          rate,
          products: {
            G95: 0, B95: 0, B7: 0, G91: 0, E20: 0, E85: 0, PWD: 0
          },
          totalVolume: 0,
          totalAmount: 0,   // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏ß‡∏°
          transportFee: 0   // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å‡∏£‡∏ß‡∏°
        };
      }

      // map product ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
      grouped[date].products[item.ProductName] =
        (grouped[date].products[item.ProductName] || 0) + item.Volume;

      // ‡∏£‡∏ß‡∏°‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì/‡πÄ‡∏á‡∏¥‡∏ô
      grouped[date].totalVolume += item.Volume;
      grouped[date].totalAmount += item.Amount ?? 0;
      grouped[date].transportFee += (item.Rate ?? 0) * item.Volume;
    });

    return Object.values(grouped);
  };

  const rows = groupByDate(invoiceData?.Report);

  const totals = rows.reduce((acc, row) => {
    // ‡∏£‡∏ß‡∏° product
    Object.keys(row.products).forEach(key => {
      acc.products[key] += row.products[key];
    });

    // ‡∏£‡∏ß‡∏°‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
    acc.totalVolume += row.totalVolume;
    acc.transportFee += row.transportFee;
    acc.totalAmount += row.totalAmount;

    return acc;
  }, {
    products: { G95: 0, B95: 0, B7: 0, G91: 0, E20: 0, E85: 0, PWD: 0 },
    totalVolume: 0,
    transportFee: 0,
    totalAmount: 0
  });

  const calculateDueDate = (dateString, creditDays) => {
    if (!dateString || !creditDays) return "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà";

    const [day, month, year] = dateString.split("/").map(Number);
    const date = new Date(year, month - 1, day);

    date.setDate(date.getDate() + Number(creditDays));

    const thaiMonths = [
      "‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°", "‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå", "‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°", "‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô", "‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°", "‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô",
      "‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°", "‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°", "‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô", "‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°", "‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô", "‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°"
    ];

    const dueDay = date.getDate();
    const dueMonth = thaiMonths[date.getMonth()];
    const dueYear = date.getFullYear() + 543; // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ‡∏û.‡∏®.

    return `‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${dueDay} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô${dueMonth} ‡∏û.‡∏®.${dueYear}`;
  };


  const formatThai = (date) => {
    if (!date) return "";

    let d;
    if (typeof date === "string") {
      // ‡∏•‡∏≠‡∏á parse ‡πÄ‡∏õ‡πá‡∏ô DD/MM/YYYY ‡∏Å‡πà‡∏≠‡∏ô
      const parts = date.split("/");
      if (parts.length === 3) {
        const [day, month, year] = parts;
        d = new Date(`${year}-${month}-${day}`);
      } else {
        d = new Date(date); // fallback
      }
    } else {
      d = new Date(date);
    }

    if (isNaN(d.getTime())) return "";

    const day = String(d.getDate()).padStart(2, "0");
    const month = String(d.getMonth() + 1).padStart(2, "0");
    const year = d.getFullYear() + 543; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° 543

    return `${day}/${month}/${year}`;
  }

  const chunkArray = (arr, size) => {
    const result = [];
    for (let i = 0; i < arr.length; i += size) {
      result.push(arr.slice(i, i + size));
    }
    return result;
  };

  const paginateRows = (rows) => {
    const pages = [];
    let i = 0;

    while (i < rows.length) {
      // üëâ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 16 ‡πÅ‡∏ñ‡∏ß ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô "‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢"
      if (rows.length - i <= 13) {
        pages.push(rows.slice(i, i + 13));
        i += 13;
      } else {
        // üëâ ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÉ‡∏´‡πâ 20 ‡πÅ‡∏ñ‡∏ß
        pages.push(rows.slice(i, i + 15));
        i += 15;
      }
    }

    return pages;
  };

  const pages = paginateRows(rows);

  console.log("invoiceData : ", invoiceData);
  console.log("Tickets Order : ", invoiceData?.Report);
  console.log("Total Order : ", invoiceData?.Total);

  return (
    <Box display="flex" justifyContent="center" alignItems="center" marginTop={3}>
      <Box>
        <Box id="invoiceContent">
          {pages.map((pageRows, pageIndex) => (
            <Box
              key={pageIndex}
              sx={{
                width: "21cm",
                minHeight: "29.6cm", // ‡πÉ‡∏ä‡πâ minHeight ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô
                backgroundColor: "#fff",
                paddingTop: "1cm",
                paddingBottom: "1cm",
                paddingLeft: "0.9cm",
                paddingRight: "0.5cm",
                boxSizing: "border-box",
                border: "1px solid lightgray",
              }}
            >
              <Grid container spacing={2}>
                <Grid item xs={9}>
                  {
                    invoiceData &&
                    (
                      <React.Fragment>
                        <Typography variant="h6" fontWeight="bold" gutterBottom>
                          {
                            invoiceData?.Company === "‡∏ö‡∏à.‡∏ô‡∏≤‡∏Ñ‡∏£‡∏≤ ‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï (‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà)" ? "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ô‡∏≤‡∏Ñ‡∏£‡∏≤ ‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï ‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà)"
                              : "‡∏´‡πâ‡∏≤‡∏á‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô ‡∏û‡∏¥‡∏ä‡∏¢‡∏≤ ‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï ‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà)"
                          }
                        </Typography>
                        <Typography variant="subtitle2" sx={{ marginTop: -1 }} gutterBottom>
                          {formatAddress(invoiceData?.Address)} ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ : {formatPhoneNumber(invoiceData?.Phone)}</Typography>
                        <Typography variant="subtitle2" gutterBottom>‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏†‡∏≤‡∏©‡∏µ‡∏≠‡∏≤‡∏Å‡∏£ : {formatTaxID(invoiceData?.CardID)}</Typography>
                      </React.Fragment>
                    )
                  }
                </Grid>
                <Grid item xs={3} textAlign="right">
                  <Typography variant="h6" sx={{ marginRight: 2, fontSize: "18px" }}>
                    ‡πÉ‡∏ö‡∏ß‡∏≤‡∏á‡∏ö‡∏¥‡∏•/‡πÉ‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏´‡∏ô‡∏µ‡πâ
                  </Typography>
                </Grid>
              </Grid>
              {invoiceData && (
                <Grid container spacing={2} marginTop={2} sx={{ px: 2 }}>
                  {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó */}
                  <Grid item xs={10} sx={{ border: "2px solid black", height: "140px" }}>
                    <Box sx={{ padding: 0.5 }}>
                      <Box display="flex" alignItems="center" justifyContent="left" >
                        <Typography variant="subtitle2"><b>‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó:</b></Typography>
                        <Typography variant="subtitle2" marginLeft={1}>
                          {
                            invoiceData?.Company === "‡∏ö‡∏à.‡∏ô‡∏≤‡∏Ñ‡∏£‡∏≤ ‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï (‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà)" ? "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ô‡∏≤‡∏Ñ‡∏£‡∏≤ ‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï ‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà)"
                              : "‡∏´‡πâ‡∏≤‡∏á‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô ‡∏û‡∏¥‡∏ä‡∏¢‡∏≤ ‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï ‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà)"
                          }
                        </Typography>
                      </Box>
                      <Box display="flex" alignItems="center" justifyContent="left" marginTop={0.5} >
                        <Typography variant="subtitle2"><b>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</b></Typography>
                        <Typography variant="subtitle2" marginLeft={4}>{formatAddress(invoiceData?.Address)}</Typography>
                      </Box>
                      <Box display="flex" alignItems="center" justifyContent="left" marginTop={0.5} >
                        <Typography variant="subtitle2"><b>‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏†‡∏≤‡∏©‡∏µ‡∏≠‡∏≤‡∏Å‡∏£:</b></Typography>
                        <Typography variant="subtitle2" marginLeft={1}>{formatTaxID(invoiceData?.CardID)}</Typography>
                      </Box>
                    </Box>
                  </Grid>

                  {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ */}
                  <Grid item xs={2}>
                    <Grid container spacing={2}>
                      <Grid item xs={12} sx={{ borderTop: "2px solid black", borderRight: "2px solid black", textAlign: "center", height: "30px" }}>
                        <Typography variant="subtitle2" sx={{ fontWeight: "bold", marginTop: -1.5, marginLeft: -2 }} gutterBottom>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</Typography>
                      </Grid>
                      <Grid item xs={12} sx={{ borderTop: "2px solid black", borderRight: "2px solid black", textAlign: "center", height: "40px" }}>
                        <Typography variant="subtitle2" sx={{ marginTop: -1, marginLeft: -2 }} gutterBottom>{formatThai(invoiceData?.Date)}</Typography>
                      </Grid>
                      <Grid item xs={12} sx={{ borderTop: "2px solid black", borderRight: "2px solid black", textAlign: "center", height: "30px" }}>
                        <Typography variant="subtitle2" sx={{ fontWeight: "bold", marginTop: -1.5, marginLeft: -2 }} gutterBottom>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</Typography>
                      </Grid>
                      <Grid item xs={12} sx={{ borderTop: "2px solid black", borderRight: "2px solid black", textAlign: "center", borderBottom: "2px solid black", height: "40px" }}>
                        <Typography variant="subtitle2" sx={{ marginTop: -1, marginLeft: -2 }} gutterBottom>{invoiceData?.Code}</Typography>
                      </Grid>
                    </Grid>
                  </Grid>

                  <Table size="small" sx={{ tableLayout: "fixed", "& .MuiTableCell-root": { padding: "5px" }, border: "2px solid black", marginTop: 3 }}>
                    <TableHead>
                      <TableRow sx={{ height: "35px" }}>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "80px" }} rowSpan={2} >
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</Typography>
                        </TableCell>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", borderBottom: "2px solid black" }} colSpan={7} >
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</Typography>
                        </TableCell>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "60px" }} rowSpan={2} >
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>‡∏£‡∏ß‡∏°‡∏•‡∏¥‡∏ï‡∏£</Typography>
                        </TableCell>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "60px" }} rowSpan={2} >
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å</Typography>
                        </TableCell>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "100px" }} rowSpan={2} >
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô</Typography>
                        </TableCell>
                      </TableRow>
                      <TableRow sx={{ borderBottom: "2px solid black", height: "35px" }}>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "60px" }}>
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>G95</Typography>
                        </TableCell>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "60px" }} >
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>B95</Typography>
                        </TableCell>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "60px" }}>
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>B7</Typography>
                        </TableCell>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "60px" }}>
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>G91</Typography>
                        </TableCell>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "60px" }}>
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>E20</Typography>
                        </TableCell>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "60px" }}>
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>E85</Typography>
                        </TableCell>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "60px" }}>
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>PWD</Typography>
                        </TableCell>
                      </TableRow>
                    </TableHead>
                    <TableBody>
                      {pageRows.map((row, index) => (
                        <TableRow key={index} sx={{ height: "35px" }} >
                          <TableCell sx={{ textAlign: "center", width: "80px" }}>
                            {/* {formatThaiSlash(dayjs(row.date).format("DD/MM/YYYY"))} */}
                            {formatThai(row.date)}
                          </TableCell>

                          {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏° product name */}
                          <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                            <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{new Intl.NumberFormat("en-US").format(row.products.G95 || 0)}</Typography>
                          </TableCell>
                          <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                            <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{new Intl.NumberFormat("en-US").format(row.products.B95 || 0)}</Typography>
                          </TableCell>
                          <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                            <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{new Intl.NumberFormat("en-US").format(row.products.B7 || 0)}</Typography>
                          </TableCell>
                          <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                            <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{new Intl.NumberFormat("en-US").format(row.products.G91 || 0)}</Typography>
                          </TableCell>
                          <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                            <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{new Intl.NumberFormat("en-US").format(row.products.E20 || 0)}</Typography>
                          </TableCell>
                          <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                            <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{new Intl.NumberFormat("en-US").format(row.products.E85 || 0)}</Typography>
                          </TableCell>
                          <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                            <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{new Intl.NumberFormat("en-US").format(row.products.PWD || 0)}</Typography>
                          </TableCell>

                          {/* ‡∏£‡∏ß‡∏°‡∏•‡∏¥‡∏ï‡∏£ */}
                          <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", }}>
                            {new Intl.NumberFormat("en-US").format(row.totalVolume)}
                          </TableCell>

                          {/* ‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å */}
                          <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", }}>
                            {row.rate}
                          </TableCell>

                          {/* ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô */}
                          <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", }}>
                            {new Intl.NumberFormat("en-US", {
                              minimumFractionDigits: 2,
                              maximumFractionDigits: 2
                            }).format(row.transportFee)}
                          </TableCell>
                        </TableRow>
                      ))}

                      {/* ‚úÖ ‡πÅ‡∏ñ‡∏ß‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏£‡∏ß‡∏° */}
                      {
                        pageIndex === pages.length - 1 &&
                        <React.Fragment>
                          <TableRow sx={{ height: "35px", borderTop: "2px solid black" }}>
                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", fontWeight: "bold" }}>
                              ‡∏£‡∏ß‡∏°
                            </TableCell>

                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", fontWeight: "bold" }}>{new Intl.NumberFormat("en-US").format(totals.products.G95)}</TableCell>
                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", fontWeight: "bold" }}>{new Intl.NumberFormat("en-US").format(totals.products.B95)}</TableCell>
                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", fontWeight: "bold" }}>{new Intl.NumberFormat("en-US").format(totals.products.B7)}</TableCell>
                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", fontWeight: "bold" }}>{new Intl.NumberFormat("en-US").format(totals.products.G91)}</TableCell>
                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", fontWeight: "bold" }}>{new Intl.NumberFormat("en-US").format(totals.products.E20)}</TableCell>
                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", fontWeight: "bold" }}>{new Intl.NumberFormat("en-US").format(totals.products.E85)}</TableCell>
                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", fontWeight: "bold" }}>{new Intl.NumberFormat("en-US").format(totals.products.PWD)}</TableCell>

                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", fontWeight: "bold" }}>
                              {new Intl.NumberFormat("en-US").format(totals.totalVolume)}
                            </TableCell>

                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", fontWeight: "bold" }}>
                              ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
                            </TableCell>

                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", fontWeight: "bold" }}>
                              {new Intl.NumberFormat("en-US", {
                                minimumFractionDigits: 2,
                                maximumFractionDigits: 2
                              }).format(totals.transportFee)}
                            </TableCell>
                          </TableRow>

                          <TableRow sx={{ height: "25px", borderTop: "2px solid black" }}>
                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} colSpan={8} rowSpan={2}>
                              <Box sx={{ display: "flex", alignItems: "center", justifyContent: "left" }}>
                                <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold", marginRight: 1 }} gutterBottom>‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô : </Typography>
                                <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{calculateDueDate(invoiceData?.Date, 2)}</Typography>
                              </Box>
                            </TableCell>
                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", borderBottom: "2px solid black" }} colSpan={2}>
                              <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                                ‡∏´‡∏±‡∏Å ‡∏ì ‡∏ó‡∏µ‡πà‡∏à‡πà‡∏≤‡∏¢
                              </Typography>
                            </TableCell>
                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", borderBottom: "2px solid black" }}>
                              <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                                {new Intl.NumberFormat("en-US", {
                                  minimumFractionDigits: 2,
                                  maximumFractionDigits: 2
                                }).format(invoiceData?.Total.totalTax)}
                              </Typography>
                            </TableCell>
                          </TableRow>

                          <TableRow sx={{ height: "25px" }}>
                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} colSpan={2}>
                              <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                                ‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞
                              </Typography>
                            </TableCell>
                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                              <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                                {new Intl.NumberFormat("en-US", {
                                  minimumFractionDigits: 2,
                                  maximumFractionDigits: 2
                                }).format(invoiceData?.Total.totalPayment)}
                              </Typography>
                            </TableCell>
                          </TableRow>

                          <TableRow sx={{ borderBottom: "2px solid black", borderTop: "2px solid black", height: "25px" }}>
                            <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} colSpan={11}>
                              <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                                {`( ${numberToThaiText(invoiceData?.Total.totalPayment)} )`}
                              </Typography>
                            </TableCell>
                          </TableRow>
                        </React.Fragment>
                      }

                      {/* 
                <TableRow sx={{ borderBottom: "2px solid black", borderTop: "2px solid black", height: "25px" }}>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} colSpan={3}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>‡∏£‡∏ß‡∏°</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} >
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      {new Intl.NumberFormat("en-US").format(invoiceData?.Total.totalVolume)}
                    </Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} colSpan={2}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      {new Intl.NumberFormat("en-US").format(invoiceData?.Total.totalAmount)}
                    </Typography>
                  </TableCell>
                </TableRow>
                <TableRow sx={{ height: "25px" }}>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} colSpan={3} rowSpan={2}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>{invoiceData?.DateEnd}</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", borderBottom: "2px solid black" }} >
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      ‡∏´‡∏±‡∏Å ‡∏ì ‡∏ó‡∏µ‡πà‡∏à‡πà‡∏≤‡∏¢
                    </Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", borderBottom: "2px solid black" }} colSpan={2}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      {new Intl.NumberFormat("en-US").format(invoiceData?.Total.totalTax)}
                    </Typography>
                  </TableCell>
                </TableRow>
                <TableRow sx={{ height: "25px" }}>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      ‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞
                    </Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} colSpan={2}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      {new Intl.NumberFormat("en-US").format(invoiceData?.Total.totalPayment)}
                    </Typography>
                  </TableCell>
                </TableRow>
                <TableRow sx={{ borderBottom: "2px solid black", borderTop: "2px solid black", height: "25px" }}>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} colSpan={6}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      {numberToThaiText(invoiceData?.Total.totalPayment)}
                    </Typography>
                  </TableCell>
                </TableRow>
              </TableBody>
            </Table>

            <Table size="small" sx={{ tableLayout: "fixed", "& .MuiTableCell-root": { padding: "5px" }, border: "2px solid black", marginTop: 3 }}>
              <TableHead>
                <TableRow sx={{ borderBottom: "2px solid black", height: "35px" }}>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "80px" }} >
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} >
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>‡∏ú‡∏π‡πâ‡∏Ç‡∏±‡∏ö/‡∏õ‡πâ‡∏≤‡∏¢‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "60px" }} >
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>‡∏ä‡∏ô‡∏¥‡∏î‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "80px" }} >
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏¥‡∏ï‡∏£</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "60px" }} >
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", width: "100px" }} >
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô</Typography>
                  </TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {
                  invoiceData?.Report.map((row, index) => {
                    const key = `${row.Date} : ${row.Driver} : ${row.Registration}`;
                    const rowSpan = rowSpanMap[key] && !mergedCells[key] ? rowSpanMap[key] : 0;
                    if (rowSpan) {
                      mergedCells[key] = true;
                      displayIndex++;
                    }

                    return (
                      <TableRow sx={{ height: "30px" }}>
                        {rowSpan > 0 && (
                          <TableCell
                            rowSpan={rowSpan}
                            sx={{ textAlign: "center", height: '30px', width: "80px", verticalAlign: "middle" }}>
                            <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{row.Date}</Typography>
                          </TableCell>
                        )}
                        {rowSpan > 0 && (
                          <TableCell
                            rowSpan={rowSpan}
                            sx={{ textAlign: "center", height: '30px', verticalAlign: "middle" }}
                          >
                            <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{row.Driver.split(":")[1]} : {row.Registration.split(":")[1]}</Typography>
                          </TableCell>
                        )}
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{row.ProductName}</Typography>
                        </TableCell>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{new Intl.NumberFormat("en-US").format(row.Volume)}</Typography>
                        </TableCell>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{new Intl.NumberFormat("en-US").format(row.Rate)}</Typography>
                        </TableCell>
                        <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                          <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0 }} gutterBottom>{new Intl.NumberFormat("en-US").format(row.Volume * row.Rate)}</Typography>
                        </TableCell>
                      </TableRow>
                    )
                  })
                }
                <TableRow sx={{ borderBottom: "2px solid black", borderTop: "2px solid black", height: "25px" }}>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} colSpan={3}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>‡∏£‡∏ß‡∏°</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} >
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      {new Intl.NumberFormat("en-US").format(invoiceData?.Total.totalVolume)}
                    </Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} colSpan={2}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      {new Intl.NumberFormat("en-US").format(invoiceData?.Total.totalAmount)}
                    </Typography>
                  </TableCell>
                </TableRow>
                <TableRow sx={{ height: "25px" }}>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} colSpan={3} rowSpan={2}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>{invoiceData?.DateEnd}</Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", borderBottom: "2px solid black" }} >
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      ‡∏´‡∏±‡∏Å ‡∏ì ‡∏ó‡∏µ‡πà‡∏à‡πà‡∏≤‡∏¢
                    </Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black", borderBottom: "2px solid black" }} colSpan={2}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      {new Intl.NumberFormat("en-US").format(invoiceData?.Total.totalTax)}
                    </Typography>
                  </TableCell>
                </TableRow>
                <TableRow sx={{ height: "25px" }}>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      ‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞
                    </Typography>
                  </TableCell>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} colSpan={2}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      {new Intl.NumberFormat("en-US").format(invoiceData?.Total.totalPayment)}
                    </Typography>
                  </TableCell>
                </TableRow>
                <TableRow sx={{ borderBottom: "2px solid black", borderTop: "2px solid black", height: "25px" }}>
                  <TableCell sx={{ textAlign: "center", borderLeft: "2px solid black" }} colSpan={6}>
                    <Typography variant="subtitle2" sx={{ lineHeight: 1, margin: 0, fontWeight: "bold" }} gutterBottom>
                      {numberToThaiText(invoiceData?.Total.totalPayment)}
                    </Typography>
                  </TableCell>
                </TableRow>
                */}
                    </TableBody>
                  </Table>
                  <Grid item xs={12}>
                    <Grid container spacing={2}>
                      <Grid item xs={8}>
                        <Typography variant="subtitle2" fontWeight="bold" gutterBottom>‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ
                          {
                            invoiceData?.Company === "‡∏ö‡∏à.‡∏ô‡∏≤‡∏Ñ‡∏£‡∏≤ ‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï (‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà)" ? "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ô‡∏≤‡∏Ñ‡∏£‡∏≤ ‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï ‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà)"
                              : "‡∏´‡πâ‡∏≤‡∏á‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô ‡∏û‡∏¥‡∏ä‡∏¢‡∏≤ ‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï ‡∏à‡∏≥‡∏Å‡∏±‡∏î (‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà)"
                          }
                        </Typography>
                        <Typography variant="subtitle2" gutterBottom>1. KBANK ‡∏™‡∏≤‡∏Ç‡∏≤ ‡πÄ‡∏ü‡∏™‡∏ï‡∏¥‡πÄ‡∏ß‡∏• 663-1-00798-6</Typography>
                        <Typography variant="subtitle2" gutterBottom>2. KBANK ‡∏™‡∏≤‡∏Ç‡∏≤‡∏õ‡πà‡∏≤‡πÅ‡∏î‡∏î 064-8-29539-1</Typography>
                      </Grid>
                      <Grid item xs={4} sx={{ textAlign: "center", marginTop: 4 }}>
                        <Box width="100%" borderTop="2px solid black" sx={{ marginTop: 3.5 }}>
                          <Typography variant="subtitle2" fontWeight="bold" sx={{ marginTop: 0.5 }} gutterBottom>‡∏ú‡∏π‡πâ‡∏ß‡∏≤‡∏á‡∏ö‡∏¥‡∏•</Typography>
                        </Box>
                      </Grid>
                    </Grid>
                  </Grid>
                </Grid>
              )}
            </Box>
          ))}
        </Box>
        <div style={{ textAlign: "center", marginTop: "20px" }}>
          <Button variant="contained" onClick={handleDownloadImage}>
            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
          </Button>
        </div>
      </Box>
    </Box>
  );
};

export default PrintReport;
